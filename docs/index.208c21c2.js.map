{"mappings":"ACAA,MAAM,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAe,SAAS,cAAc,CAAC,SACvC,EAAiB,SAAS,cAAc,CAAC,aAGzC,EAAc,CAClB,EAAG,CAAC,IAAK,EAAE,CACX,EAAG,CAAC,IAAK,EAAE,CACX,EAAG,CAAC,EAAG,IAAI,CACX,EAAG,CAAC,EAAG,IAAI,CACX,EAAG,CAAC,IAAK,EAAE,CACX,EAAG,CAAC,IAAK,EAAE,AAGb,EAoCA,SAAS,EAAa,CAAK,EAEzB,EAAc,SAAS,CAAG,GAE1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,IAAK,CAC9B,IAAM,EAAO,AAMjB,WAEE,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAAC,QAEnB,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAAC,QAInB,IAAM,EAAS,CACb,mGACA,mGACA,mGACA,mGACA,mGACA,mGACD,CAUD,MARA,AAVc,CAAC,QAAS,OAAQ,QAAS,OAAQ,MAAO,SAAS,CAU3D,OAAO,CAAC,CAAC,EAAM,KACnB,IAAM,EAAU,SAAS,aAAa,CAAC,OACvC,EAAQ,SAAS,CAAC,GAAG,CAAC,GACtB,EAAQ,KAAK,CAAC,eAAe,CAAG,CAAC,IAAI,EAAE,CAAM,CAAC,EAAM,CAAC,CAAC,CAAC,CACvD,EAAK,WAAW,CAAC,EACnB,GAEA,EAAK,WAAW,CAAC,GACV,CACT,IAjCI,EAAc,WAAW,CAAC,EAC5B,CACF,CAzCA,EAAe,gBAAgB,CAAC,QAAS,KACvC,IAAM,EAAY,SAAS,EAAe,KAAK,EAE/C,GAAI,EAAY,GAAK,EAAY,EAAG,CAClC,MAAM,0CACN,MACF,CAEA,EAAa,EACf,GAGA,EAAW,gBAAgB,CAAC,QAAS,KACnC,IAAM,EAAQ,SAAS,gBAAgB,CAAC,SACpC,EAAQ,EAEZ,EAAM,OAAO,CAAC,AAAC,IACb,IAAM,EAAO,KAAK,KAAK,CAAC,AAAgB,EAAhB,KAAK,MAAM,IAAU,EAC7C,GAAS,EAGT,GAAM,CAAC,EAAW,EAAU,CAAG,CAAW,CAAC,EAAK,AAChD,CAAA,EAAK,KAAK,CAAC,SAAS,CAAG,CAAC,QAAQ,EAAE,EAAU,aAAa,EAAE,EAAU,IAAI,CAAC,CAG1E,EAAK,YAAY,CAAC,aAAc,EAClC,GAGA,EAAa,WAAW,CAAG,CAAC,CAAC,EAAE,EAAA,CAAO,AACxC,GA6CA,EAAa","sources":["<anon>","scr/script.js"],"sourcesContent":["const diceContainer = document.getElementById(\"diceContainer\");\nconst rollButton = document.getElementById(\"rollButton\");\nconst totalDisplay = document.getElementById(\"total\");\nconst diceCountInput = document.getElementById(\"diceCount\");\n// Map of dice face values to rotation angles\nconst diceFaceMap = {\n    1: [\n        360,\n        0\n    ],\n    2: [\n        540,\n        0\n    ],\n    3: [\n        0,\n        270\n    ],\n    4: [\n        0,\n        450\n    ],\n    5: [\n        270,\n        0\n    ],\n    6: [\n        450,\n        0\n    ]\n};\n// Event listener for dice count input\ndiceCountInput.addEventListener(\"input\", ()=>{\n    const diceCount = parseInt(diceCountInput.value);\n    if (diceCount < 1 || diceCount > 5) {\n        alert(\"Please choose a number between 1 and 5\");\n        return;\n    }\n    generateDice(diceCount); // Generate the specified number of dice\n});\n// Event listener for the \"Roll Dice\" button\nrollButton.addEventListener(\"click\", ()=>{\n    const cubes = document.querySelectorAll(\".cube\");\n    let total = 0;\n    cubes.forEach((cube)=>{\n        const roll = Math.floor(Math.random() * 6) + 1; // Roll dice value (1-6)\n        total += roll; // Add the dice value to the total\n        // Get corresponding rotations for the roll value\n        const [xRotation, yRotation] = diceFaceMap[roll];\n        cube.style.transform = `rotateX(${xRotation}deg) rotateY(${yRotation}deg)`; // Update dice face\n        // Set the data-value attribute to store the rolled value\n        cube.setAttribute(\"data-value\", roll);\n    });\n    // Display the total sum of dice values\n    totalDisplay.textContent = ` ${total}`;\n});\n// Function to generate the dice\nfunction generateDice(count) {\n    // Clear the existing dice\n    diceContainer.innerHTML = \"\";\n    for(let i = 0; i < count; i++){\n        const dice = createDice();\n        diceContainer.appendChild(dice);\n    }\n}\n// Function to create a single dice element\nfunction createDice() {\n    // Create a dice element\n    const dice = document.createElement(\"div\");\n    dice.classList.add(\"dice\");\n    const cube = document.createElement(\"div\");\n    cube.classList.add(\"cube\");\n    // Add six faces to the cube\n    const faces = [\n        \"front\",\n        \"back\",\n        \"right\",\n        \"left\",\n        \"top\",\n        \"bottom\"\n    ];\n    const images = [\n        \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/gtrjmcia0o7jlnqdauu3.png\",\n        \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/x0u4qui4balu01ldjgjq.png\",\n        \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/b1eownany08x6muu3k4b.png\",\n        \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/haiwggj9z0bv3epfyzbb.png\",\n        \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056274/dice/dark/lykt2tuohniu9avosznf.png\",\n        \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056274/dice/dark/powtjgng7oxiasqwk2dv.png\"\n    ];\n    faces.forEach((face, index)=>{\n        const faceDiv = document.createElement(\"div\");\n        faceDiv.classList.add(face);\n        faceDiv.style.backgroundImage = `url(${images[index]})`;\n        cube.appendChild(faceDiv);\n    });\n    dice.appendChild(cube);\n    return dice;\n}\n// Initialize with one dice\ngenerateDice(1);\n\n//# sourceMappingURL=index.208c21c2.js.map\n","const diceContainer = document.getElementById(\"diceContainer\");\r\nconst rollButton = document.getElementById(\"rollButton\");\r\nconst totalDisplay = document.getElementById(\"total\");\r\nconst diceCountInput = document.getElementById(\"diceCount\");\r\n\r\n// Map of dice face values to rotation angles\r\nconst diceFaceMap = {\r\n  1: [360, 0],\r\n  2: [540, 0],\r\n  3: [0, 270],\r\n  4: [0, 450],\r\n  5: [270, 0],\r\n  6: [450, 0],\r\n  \r\n\r\n};\r\n\r\n// Event listener for dice count input\r\ndiceCountInput.addEventListener(\"input\", () => {\r\n  const diceCount = parseInt(diceCountInput.value);\r\n\r\n  if (diceCount < 1 || diceCount > 5) {\r\n    alert(\"Please choose a number between 1 and 5\");\r\n    return;\r\n  }\r\n\r\n  generateDice(diceCount); // Generate the specified number of dice\r\n});\r\n\r\n// Event listener for the \"Roll Dice\" button\r\nrollButton.addEventListener(\"click\", () => {\r\n  const cubes = document.querySelectorAll(\".cube\");\r\n  let total = 0;\r\n\r\n  cubes.forEach((cube) => {\r\n    const roll = Math.floor(Math.random() * 6) + 1; // Roll dice value (1-6)\r\n    total += roll; // Add the dice value to the total\r\n\r\n    // Get corresponding rotations for the roll value\r\n    const [xRotation, yRotation] = diceFaceMap[roll];\r\n    cube.style.transform = `rotateX(${xRotation}deg) rotateY(${yRotation}deg)`; // Update dice face\r\n\r\n    // Set the data-value attribute to store the rolled value\r\n    cube.setAttribute(\"data-value\", roll);\r\n  });\r\n\r\n  // Display the total sum of dice values\r\n  totalDisplay.textContent = ` ${total}`;\r\n});\r\n\r\n// Function to generate the dice\r\nfunction generateDice(count) {\r\n  // Clear the existing dice\r\n  diceContainer.innerHTML = \"\";\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const dice = createDice();\r\n    diceContainer.appendChild(dice);\r\n  }\r\n}\r\n\r\n// Function to create a single dice element\r\nfunction createDice() {\r\n  // Create a dice element\r\n  const dice = document.createElement(\"div\");\r\n  dice.classList.add(\"dice\");\r\n\r\n  const cube = document.createElement(\"div\");\r\n  cube.classList.add(\"cube\");\r\n\r\n  // Add six faces to the cube\r\n  const faces = [\"front\", \"back\", \"right\", \"left\", \"top\", \"bottom\"];\r\n  const images = [\r\n    \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/gtrjmcia0o7jlnqdauu3.png\", // value 1\r\n    \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/x0u4qui4balu01ldjgjq.png\", // value 2\r\n    \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/b1eownany08x6muu3k4b.png\", // value 3\r\n    \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056273/dice/dark/haiwggj9z0bv3epfyzbb.png\", // value 4\r\n    \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056274/dice/dark/lykt2tuohniu9avosznf.png\", // value 5\r\n    \"https://res.cloudinary.com/drkmgpcad/image/upload/v1738056274/dice/dark/powtjgng7oxiasqwk2dv.png\", // value 6\r\n  ];\r\n\r\n  faces.forEach((face, index) => {\r\n    const faceDiv = document.createElement(\"div\");\r\n    faceDiv.classList.add(face);\r\n    faceDiv.style.backgroundImage = `url(${images[index]})`;\r\n    cube.appendChild(faceDiv);\r\n  });\r\n\r\n  dice.appendChild(cube);\r\n  return dice;\r\n}\r\n\r\n// Initialize with one dice\r\ngenerateDice(1);\r\n"],"names":["diceContainer","document","getElementById","rollButton","totalDisplay","diceCountInput","diceFaceMap","generateDice","count","innerHTML","i","dice","createDice","createElement","classList","add","cube","images","faces","forEach","face","index","faceDiv","style","backgroundImage","appendChild","addEventListener","diceCount","parseInt","value","alert","cubes","querySelectorAll","total","roll","Math","floor","random","xRotation","yRotation","transform","setAttribute","textContent"],"version":3,"file":"index.208c21c2.js.map"}